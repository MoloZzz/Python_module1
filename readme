Object-oriented programming.

1. Using abstract classes, classes, classes-
lists, mechanisms of inheritance and aggregation

design and implement a convex class hierarchy
quadrilaterals on the plane,

(a) a rectangle,
(b) square,
(c) parallelogram,
(d) rhombus,
(e) trapezoid,
(e) rectangular trapezoid,
(g) isosceles trapezium.

Для усіх класів ієрархії реалізувати:
— Атрибут що визначає тип фігури.
— Атрибут що визначає унікальний незмінний
ідентифікатор фігури в залежності від її типу.
— Незмінні атрибути що визначають вершини фігур.
— Незмінні атрибути що визначають довжини сторін
фігури.
— Незмінні атрибути що визначають периметр та площу
фігури.
— Незмінні атрибути що визначають довжину діагоналей
фігури.
— Незмінні атрибути що визначають градусну міру кутів
фігури.
— Динамічні атрибути які перевіряють виконання
основних якісних властивостей фігури (наприклад рівність
сторін, паралельність сторін, рівність кутів, тощо).
— Метод ініціалізації об’єктів екземплярів.
— Методи отримання координат вершин фігури.
— Методи отримання довжини сторін фігури.
— Методи отримання периметру та площі фігури.
— Методи отримання довжини діагоналей фігури.
— Методи отримання градусних мір кутів фігури.
— Метод отримання переліку підтипів фігури.
— Метод отримання переліку супертипів фігури.
— Метод перевірки належності фігури до певного типу
фігур в рамках ієрархії.
— Усі можливі методи порівняння за площею та
периметром фігури із будь-якої іншою фігурою ієрархії.
Реалізація має враховувати усі можливі варіанти
порівняння: лише за площею, лише за периметром, за
площею та периметром.

— Метод перевірки перетину фігури із будь-якою іншою
фігурою ієрархії.
Усі класи ієрархії повинні розміщуватися в окремих
модулях, а для використання імпортуватися за допомогою
інструкції import ModuleName.